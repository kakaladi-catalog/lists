HTML

<div class="wrap clearfix">
    <!-- Login Button -->
    <button id="show-login-button" onclick="showLoginForm()">Login</button>

    <!-- Login Form (Initially Hidden) -->
    <div id="login-form" style="display:none;">
        <h2>Login</h2>
        <input type="text" id="username" placeholder="Username">
        <input type="password" id="password" placeholder="Password">
        <button onclick="login()">Submit</button>
    </div>
    <!-- Product Form (Initially Hidden) -->
    <div id="product-form" style="display:none;">
        <h2>Add Product</h2>
        <input type="text" id="product-image" placeholder="Image URL">
        <input type="text" id="product-price" placeholder="Price">
        <input type="text" id="product-details" placeholder="Details">
        <button onclick="addProduct()">Add Product</button>
    </div>
	
	
	
	
Java	
	
	
	
	
	
	    let isLoggedIn = false; // Track login status

    // Function to show the login form
    function showLoginForm() {
        document.getElementById('show-login-button').style.display = 'none'; // Hide the login button
        document.getElementById('login-form').style.display = 'block'; // Show the login form
    }

    // Function to handle login
    function login() {
        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;

        if (username === 'kaka' && password === '1415') {
            isLoggedIn = true; // Set login status to true
            document.getElementById('login-form').style.display = 'none'; // Hide the login form
            document.getElementById('product-form').style.display = 'block'; // Show the product form
            refreshProductList(); // Refresh the product list to show delete buttons
        } else {
            alert('Invalid username or password');
        }
    }

    // Function to add a product
    function addProduct() {
        const image = document.getElementById('product-image').value;
        const price = document.getElementById('product-price').value;
        const details = document.getElementById('product-details').value;

        if (image && price && details) {
            const product = { image, price, details };
            saveProduct(product);
            addProductToCatalog(product);
            clearForm();
        } else {
            alert('Please fill all fields');
        }
    }

    // Function to save product to localStorage
    function saveProduct(product) {
        const products = JSON.parse(localStorage.getItem('products')) || [];
        products.push(product);
        localStorage.setItem('products', JSON.stringify(products));
    }

    // Function to add product to the catalog
    function addProductToCatalog(product, index) {
        const productList = document.getElementById('product-list');
        const li = document.createElement('li');
        li.className = 'product-item';
        li.setAttribute('data-index', index); // Add data-index attribute for deletion

        // Product details
        li.innerHTML = `
            <img src="${product.image}" alt="Product Image">
            <span class="price">Price: $${product.price}</span>
            <span class="details">${product.details}</span>
            <a href="https://t.me/tinhnow_bot" target="_blank">buy now</a>
        `;

        // Add delete button if logged in
        if (isLoggedIn) {
            const deleteButton = document.createElement('button');
            deleteButton.innerText = 'Delete';
            deleteButton.className = 'delete-button';
            deleteButton.onclick = () => deleteProduct(index); // Attach delete function
            li.appendChild(deleteButton);
        }

        productList.appendChild(li);
    }

    // Function to delete a product
    function deleteProduct(index) {
        const products = JSON.parse(localStorage.getItem('products')) || [];
        products.splice(index, 1); // Remove the product at the specified index
        localStorage.setItem('products', JSON.stringify(products)); // Update localStorage
        refreshProductList(); // Refresh the product list
    }

    // Function to refresh the product list
    function refreshProductList() {
        const productList = document.getElementById('product-list');
        productList.innerHTML = ''; // Clear the current list
        loadProducts(); // Reload products from localStorage
    }

    // Function to clear the form after adding a product
    function clearForm() {
        document.getElementById('product-image').value = '';
        document.getElementById('product-price').value = '';
        document.getElementById('product-details').value = '';
    }

    // Function to load products from localStorage
    function loadProducts() {
        const products = JSON.parse(localStorage.getItem('products')) || [];
        products.forEach((product, index) => {
            addProductToCatalog(product, index);
        });
    }

    // Load products when the page loads
    window.onload = loadProducts;
	